Index: config/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\nDjango settings for config project.\n\nGenerated by 'django-admin startproject' using Django 4.2.7.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/4.2/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/4.2/ref/settings/\n\"\"\"\nimport os\nimport dotenv\nfrom pathlib import Path\n\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\ndotenv.load_dotenv()\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = os.environ.get('SECRET_KEY')\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = [\"*\"]\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n\n    # My apps created\n    'apps.products',\n    'apps.blog',\n    'drf_yasg',\n\n    # Installed app\n    'rest_framework',\n\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'config.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'config.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/4.2/topics/i18n/\n\nLANGUAGE_CODE = 'ru-RU'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\n\n# STATIC_URL = '/static/'\n# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\n# STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static/')]\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media/')\n\nTELEGRAM_BOT_TOKEN = '6919718633:AAGOmz_YRG4q18fnY082xZQapn0f-0dMrww'\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config/settings.py b/config/settings.py
--- a/config/settings.py	
+++ b/config/settings.py	
@@ -46,6 +46,7 @@
 
     # Installed app
     'rest_framework',
+    'django_filters',
 
 ]
 
Index: apps/blog/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.db import models\nfrom django.utils import timezone\n\nfrom .. products.models import Product\n\n\nclass Events(models.Model):\n    title = models.CharField(verbose_name='События', max_length=150)\n    description = models.TextField(verbose_name='Описание')\n    created_at = models.DateTimeField(verbose_name='Создано', auto_now_add=True)\n    image = models.CharField(verbose_name='Картинка', max_length=150)\n    slug = models.SlugField()\n    objects = models.Manager()\n\n    class Meta:\n        verbose_name = 'Событиe'\n        verbose_name_plural = 'События'\n\n    def __str__(self):\n        return f\"{self.title}\"\n\n\nclass Public(models.Model):\n    title = models.CharField(verbose_name='Публикации', max_length=150)\n    description = models.TextField(verbose_name='Описание')\n    created_at = models.DateTimeField(verbose_name='Создано', auto_now_add=True)\n    image = models.CharField(verbose_name='Картинка', max_length=200)\n    slug = models.SlugField()\n    objects = models.Manager()\n\n    class Meta:\n        verbose_name = 'Публикация'\n        verbose_name_plural = 'Публикации'\n\n    def __str__(self):\n        return f\"{self.title}\"\n\n\nclass NewProducts(models.Model):\n    product_name = models.CharField(verbose_name='Имя продукта', max_length=150)\n    slug = models.SlugField()\n    product = models.ForeignKey(Product, on_delete=models.CASCADE, null=True, verbose_name='Новинка')\n    objects = models.Manager()\n\n    class Meta:\n        verbose_name = 'Новинка'\n        verbose_name_plural = 'Новинки'\n\n    def __str__(self):\n        return f\"{self.product_name}\"\n\n\nclass ExhibitionCalendar(models.Model):\n    name_exhibition = models.TextField(verbose_name='Календарь выставок')\n    period = models.CharField(verbose_name='Период', max_length=100)\n    data_of_participation = models.CharField(verbose_name='Дата участия', max_length=100)\n    location = models.CharField(verbose_name='Место проведения выставки', max_length=100)\n    slug = models.SlugField()\n    objects = models.Manager()\n\n    class Meta:\n        verbose_name = 'Календарь выставки'\n        verbose_name_plural = 'Календарь выставок'\n\n    def __str__(self):\n        return f\"{self.name_exhibition}\"\n\n\nclass ManualVideo(models.Model):\n    name = models.CharField(max_length=150, verbose_name='Название видео')\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/blog/models.py b/apps/blog/models.py
--- a/apps/blog/models.py	
+++ b/apps/blog/models.py	
@@ -68,3 +68,7 @@
 
 class ManualVideo(models.Model):
     name = models.CharField(max_length=150, verbose_name='Название видео')
+    description = models.TextField(verbose_name='Описание видео')
+    created = models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')
+
+
